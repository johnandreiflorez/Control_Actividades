package gestioninformacionproyectos.View;

import gestioninformacionproyectos.Controller.OwnerController;
import gestioninformacionproyectos.Model.Owner;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jaflorez
 */

public class OwnersFrm extends javax.swing.JInternalFrame {

    public OwnersFrm() {
        initComponents();
        listOwners();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNumberPhone = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        btnConsult = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNumberCelPhone = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOwners = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 153, 153));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("RESPONSABLE");
        setDoubleBuffered(true);
        setInheritsPopupMenu(true);

        jLabel3.setText("Código *");

        jLabel4.setText("Número  Fijo *");

        btnDelete.setText("BORRAR");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnConsult.setText("CONSULTAR");
        btnConsult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultActionPerformed(evt);
            }
        });

        btnUpdate.setText("MODIFICAR");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel5.setText("Número Móvil *");

        jLabel1.setText("RESPONSABLE");

        jLabel2.setText("Nombre *");

        tblOwners.setAutoCreateRowSorter(true);
        tblOwners.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblOwners);

        btnSave.setText("GUARDAR");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(154, 154, 154)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNumberCelPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNumberPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addComponent(btnSave)
                                .addGap(52, 52, 52)
                                .addComponent(btnConsult)
                                .addGap(32, 32, 32)
                                .addComponent(btnUpdate)
                                .addGap(56, 56, 56)
                                .addComponent(btnDelete))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 664, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(341, 341, 341)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNumberPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNumberCelPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnDelete)
                    .addComponent(btnConsult)
                    .addComponent(btnUpdate))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        String code, name, phoneNumber, celphoneNumber;
        
        if("".equalsIgnoreCase(txtCode.getText()) || "".equalsIgnoreCase(txtName.getText()) ||
            "".equalsIgnoreCase(txtNumberPhone.getText())){
                JOptionPane.showMessageDialog(null, "Debe rellenar todos los campos obligatorios");
        } else {
            code = txtCode.getText();
            name = txtName.getText();
            phoneNumber = txtNumberPhone.getText();
            celphoneNumber = txtNumberCelPhone.getText();
            if(Integer.parseInt(code) <= 0) {
                JOptionPane.showMessageDialog(null, "El código del responsable no puede ser menor a cero (0)");
            } else  {
                Owner objOwner = new Owner(code, name, phoneNumber, celphoneNumber);
                OwnerController objOwnerController = new OwnerController(objOwner);
                if(!objOwnerController.validateOwner(code)) {
                    objOwnerController.createOwner();
                    JOptionPane.showMessageDialog(null, "Responsable creado exitosamente, ya puede asignar el responsable.");
                    txtName.setText("");
                    txtCode.setText("");
                    txtNumberPhone.setText("");
                    txtNumberCelPhone.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, "Ya existe un responsable registrado con ese código");
                }
            }
        }
        this.listOwners();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String code, name, phoneNumber, celphoneNumber;
        
        if("".equalsIgnoreCase(txtCode.getText()) || "".equalsIgnoreCase(txtName.getText()) ||
            "".equalsIgnoreCase(txtNumberPhone.getText())){
                JOptionPane.showMessageDialog(null, "Debe rellenar todos los campos obligatorios");
        } else {
            code = txtCode.getText();
            name = txtName.getText();
            phoneNumber = txtNumberPhone.getText();
            celphoneNumber = txtNumberCelPhone.getText();
            if(Integer.parseInt(code) <= 0) {
                JOptionPane.showMessageDialog(null, "El código del responsable no puede ser menor a cero (0)");
            } else  {
                Owner objOwner = new Owner(code, name, phoneNumber, celphoneNumber);
                OwnerController objOwnerController = new OwnerController(objOwner);
                if(objOwnerController.validateOwner(code)) {
                    objOwnerController.updateOwner(code);
                    JOptionPane.showMessageDialog(null, "Responsable actualizado exitosamente.");
                    txtCode.setText("");
                    txtName.setText("");
                    txtNumberPhone.setText("");
                    txtNumberCelPhone.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, "No se puede actualizar un responsable que no ha sido creado");
                }
            }
        }
        this.listOwners();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        String code;
        
        if("".equalsIgnoreCase(txtCode.getText())) {
            JOptionPane.showMessageDialog(null, "Debe copiar el código del responsable que desea eliminar");
        } else {
            code = txtCode.getText();
            if(Integer.parseInt(code) <= 0) {
                JOptionPane.showMessageDialog(null, "El código del responsable no puede ser menor a cero (0)");
            } else {
                Owner objOwner = new Owner(code, "", "", "");
                OwnerController objOwnerController = new OwnerController(objOwner);
                if(objOwnerController.validateOwner(code)) {
                    objOwnerController.deleteOwner(code);
                    JOptionPane.showMessageDialog(null, "El responsable con código " + code + " ha sido borrada exitosamente.");
                } else {
                    JOptionPane.showMessageDialog(null, "El responsable con código " + code + " no existe.");
                }
            }
        }
        this.listOwners();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnConsultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultActionPerformed
        // TODO add your handling code here:
        String code;
        
        if("".equalsIgnoreCase(txtCode.getText())) {
            JOptionPane.showMessageDialog(null, "Debe copiar el código del responsable que desea consultar");
        } else {
            code = txtCode.getText();
            if(Integer.parseInt(code) <= 0) {
                JOptionPane.showMessageDialog(null, "El código del responsable no puede ser menor a cero (0)");
            } else {
                Owner objOwner = new Owner(code, "", "", "");
                OwnerController objOwnerController = new OwnerController(objOwner);
                if(objOwnerController.validateOwner(code)) {
                    objOwner = objOwnerController.consultOwner();
                    txtName.setText(objOwner.getName());
                    txtNumberPhone.setText(objOwner.getNumberPhone());
                    txtNumberCelPhone.setText(objOwner.getNumberCelPhone());
                } else {
                    JOptionPane.showMessageDialog(null, "El responsable con código " + code + " no existe.");
                }
            }
        }
    }//GEN-LAST:event_btnConsultActionPerformed

    private void listOwners(){
        Owner objOwner = new Owner("", "", "", "");
        OwnerController objOwnerController = new OwnerController(objOwner);
        String[][] matriz = objOwnerController.consultAllOwners();
        
        Object objMat[][] = new String[matriz.length][4];
        String vecTit[] = new String[4];
        vecTit[0] = "Código";
        vecTit[1] = "Nombre";
        vecTit[2] = "Número Fijo";
        vecTit[3] = "Número Móvil";
        
        for(int i = 0; i < matriz.length; i++){
            objMat[i][0] = matriz[i][0];
            objMat[i][1] = matriz[i][1];
            objMat[i][2] = matriz[i][2];
            objMat[i][3] = matriz[i][3];
        }
        DefaultTableModel objModelo= new DefaultTableModel(objMat,vecTit);
        tblOwners.setModel(objModelo);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsult;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblOwners;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNumberCelPhone;
    private javax.swing.JTextField txtNumberPhone;
    // End of variables declaration//GEN-END:variables
}
