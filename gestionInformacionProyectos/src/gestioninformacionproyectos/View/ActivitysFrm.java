package gestioninformacionproyectos.View;

import gestioninformacionproyectos.Controller.ActivityController;
import gestioninformacionproyectos.Utils.DateFormat;
import gestioninformacionproyectos.Model.Activity;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jaflorez
 */
public class ActivitysFrm extends javax.swing.JInternalFrame {

    public ActivitysFrm() {
        initComponents();
        listActivities();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblActivities = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        jdcStartDate = new com.toedter.calendar.JDateChooser();
        jdcEndDate = new com.toedter.calendar.JDateChooser();
        btnConsult = new javax.swing.JButton();

        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("ACTIVIDAD");

        btnSave.setText("GUARDAR");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setText("MODIFICAR");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel5.setText("Fecha de finalización *");

        jLabel1.setText("ACTIVIDAD");

        jLabel2.setText("Descripción *");

        jLabel3.setText("Código *");

        tblActivities.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblActivities);

        jLabel4.setText("Fecha de inicio *");

        btnDelete.setText("BORRAR");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jdcStartDate.setDateFormatString("yyyy-MM-dd");

        jdcEndDate.setDateFormatString("yyyy-MM-dd");

        btnConsult.setText("CONSULTAR");
        btnConsult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                                .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                                    .addComponent(jdcStartDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jdcEndDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(218, 218, 218))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(339, 339, 339)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnConsult)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnSave)
                                .addGap(331, 331, 331)))))
                .addContainerGap(193, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel5)
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jdcStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jdcEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate)
                    .addComponent(btnConsult))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        DateFormat dateFormat = new DateFormat();
        String description, startDate, endDate;
        int code;
        
        if("".equalsIgnoreCase(txtName.getText()) || "".equalsIgnoreCase(txtCode.getText()) ||
            jdcStartDate.getDate() == null || jdcEndDate.getDate() == null){
                JOptionPane.showMessageDialog(null, "Debe rellenar todos los campos obligatorios");
        } else {
            code = Integer.parseInt(txtCode.getText());
            description = txtName.getText();
            startDate = dateFormat.castDateToString(jdcStartDate.getDate());
            endDate = dateFormat.castDateToString(jdcEndDate.getDate());
            if(code <= 0) {
                JOptionPane.showMessageDialog(null, "El código de la actividad no puede ser menor a cero (0)");
            } else  {
                if(dateFormat.compareTwoDates(startDate, endDate)) {
                    Activity objActivity = new Activity(code, description, startDate, endDate);
                    ActivityController objActivityController = new ActivityController(objActivity);
                    if(!objActivityController.validateActivity(code)) {
                        objActivityController.createActivity();
                        JOptionPane.showMessageDialog(null, "Actividad creada exitosamente, ya puede asignar la actividad.");
                        txtCode.setText("");
                        txtName.setText("");
                        jdcStartDate.setDate(null);
                        jdcEndDate.setDate(null);
                    } else {
                        JOptionPane.showMessageDialog(null, "Ya existe una actividad registrada con ese código");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "ERROR: " + dateFormat.getDateError());
                }
            }
        }
        this.listActivities();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        DateFormat dateFormat = new DateFormat();
        String description, startDate, endDate;
        int code;
        
        if("".equalsIgnoreCase(txtName.getText()) || "".equalsIgnoreCase(txtCode.getText()) ||
            jdcStartDate.getDate() == null || jdcEndDate.getDate() == null){
                JOptionPane.showMessageDialog(null, "Debe rellenar todos los campos obligatorios");
        } else {
            code = Integer.parseInt(txtCode.getText());
            description = txtName.getText();
            startDate = dateFormat.castDateToString(jdcStartDate.getDate());
            endDate = dateFormat.castDateToString(jdcEndDate.getDate());
            if(code <= 0) {
                JOptionPane.showMessageDialog(null, "El código de la actividad no puede ser menor a cero (0)");
            } else  {
                if(dateFormat.compareTwoDates(startDate, endDate)) {
                    Activity objActivity = new Activity(code, description, startDate, endDate);
                    ActivityController objActivityController = new ActivityController(objActivity);
                    if(objActivityController.validateActivity(code)) {
                        objActivityController.updateActivity(code);
                        JOptionPane.showMessageDialog(null, "Actividad actualizada exitosamente.");
                        txtCode.setText("");
                        txtName.setText("");
                        jdcStartDate.setDate(null);
                        jdcEndDate.setDate(null);
                    } else {
                        JOptionPane.showMessageDialog(null, "No se puede actualizar una actividad que no ha sido creada");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "ERROR: " + dateFormat.getDateError());
                }
            }
        }
        this.listActivities();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int code;
        
        if("".equalsIgnoreCase(txtCode.getText())) {
            JOptionPane.showMessageDialog(null, "Debe copiar el código de la actividad que desea eliminar");
        } else {
            code = Integer.parseInt(txtCode.getText());
            if(code <= 0) {
                JOptionPane.showMessageDialog(null, "El código de la actividad no puede ser menor a cero (0)");
            } else {
                Activity activity = new Activity(code, "", "", "");
                ActivityController activityController = new ActivityController(activity);
                if(activityController.validateActivity(code)) {
                    activityController.deleteActivity(code);
                    JOptionPane.showMessageDialog(null, "La actividad con código " + code + " ha sido borrada exitosamente.");
                } else {
                    JOptionPane.showMessageDialog(null, "La actividad con código " + code + " no existe.");
                }
            }
        }
        this.listActivities();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnConsultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultActionPerformed
        DateFormat dateFormat = new DateFormat();
        int code;
        
        if("".equalsIgnoreCase(txtCode.getText())) {
            JOptionPane.showMessageDialog(null, "Debe copiar el código de la actividad que desea consultar");
        } else {
            code = Integer.parseInt(txtCode.getText());
            if(code <= 0) {
                JOptionPane.showMessageDialog(null, "El código de la actividad no puede ser menor a cero (0)");
            } else {
                Activity activity = new Activity(code, "", "", "");
                ActivityController activityController = new ActivityController(activity);
                if(activityController.validateActivity(code)) {
                    activity = activityController.consultActivity();
                    txtName.setText(activity.getDescription());
                    jdcStartDate.setDate(dateFormat.stringToDate(activity.getStartDate()));
                    jdcEndDate.setDate(dateFormat.stringToDate(activity.getEndDate()));
                } else {
                    JOptionPane.showMessageDialog(null, "La actividad con código " + code + " no existe.");
                }
            }
        }
        
    }//GEN-LAST:event_btnConsultActionPerformed
    
    private void listActivities () {
        Activity activity = new Activity(0, "", "", "");
        ActivityController activityController = new ActivityController(activity);
        String[][] matriz = activityController.consultAllActivities();
        
        Object objMat[][] = new String[matriz.length][4];
        String vecTit[] = new String[4];
        vecTit[0] = "Código";
        vecTit[1] = "Descripción";
        vecTit[2] = "Fecha Inicio";
        vecTit[3] = "Fecha Finalización";
        
        for(int i = 0; i < matriz.length; i++){
            objMat[i][0] = matriz[i][0];
            objMat[i][1] = matriz[i][1];
            objMat[i][2] = matriz[i][2];
            objMat[i][3] = matriz[i][3];
        }
        DefaultTableModel objModelo= new DefaultTableModel(objMat,vecTit);
        tblActivities.setModel(objModelo);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsult;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdcEndDate;
    private com.toedter.calendar.JDateChooser jdcStartDate;
    private javax.swing.JTable tblActivities;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
